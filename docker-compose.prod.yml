version: "3.8"
services:
  mongodb:
    container_name: speedtest-mongodb
    volumes:
      - mongodb-speedtest:/data/db
    expose:
      - 27017
    networks:
      - speedtest-network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.labels.main-node == true

  redis:
    container_name: speedtest-redis
    expose:
      - 6379
    networks:
      - speedtest-network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  scraper:
    container_name: speedtest-scraper
    image: ghcr.io/gordonpn/speedtest-scraper:stable
    networks:
      - speedtest-network
    deploy:
      placement:
        constraints:
          - "node.role==worker"
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  backend:
    container_name: speedtest-server
    image: ghcr.io/gordonpn/speedtest-backend:stable
    environment:
      - NODE_ENV=production
    networks:
      - speedtest-network
    expose:
      - 3000
    healthcheck:
      test: curl --fail -s http://localhost:3000/api/v1/healthcheck/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m30s
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  frontend:
    container_name: speedtest-client
    image: ghcr.io/gordonpn/speedtest-frontend:stable
    networks:
      - speedtest-network
      - traefik-public
    expose:
      - "80"
    labels:
      - "traefik.enable=true"
    healthcheck:
      test: curl --fail -s http://localhost:80/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m30s
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.services.speedtest.loadbalancer.server.port=80"
        - "traefik.docker.network=traefik-public"

volumes:
  mongodb-speedtest:
    external:
      name: mongodb-speedtest

networks:
  speedtest-network:
    driver: overlay
  traefik-public:
    external: true
    driver: overlay

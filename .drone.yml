---
kind: pipeline
type: docker
name: notification

trigger:
  event: [ push ]

steps:
  - name: slack before
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started!

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL

---
kind: pipeline
type: docker
name: build docker images

trigger:
  event: [ push ]

steps:
  - name: build scraper image
    image: docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - cd ./scraper
      - docker image build .
  - name: build backend image
    image: docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - cd ./backend
      - docker image build .
  - name: build frontend image
    image: docker
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - cd ./frontend
      - docker image build .
  - name: slack after docker image build
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        docker image build #{{build.number}} succeeded!
        {{else}}
        docker image build #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: security

trigger:
  event: [ push ]

steps:
  - name: bandit test for scraper
    image: python:3.8-buster
    commands:
      - cd ./scraper
      - pip install bandit
      - bandit -r ./
  - name: safety check for scraper
    image: python:3.8-buster
    commands:
      - cd ./scraper
      - pip install safety
      - safety check
      - safety check -r requirements.txt
  - name: frontend snyk scan
    image: node:14-buster-slim
    environment:
      SNYK_TOKEN:
        from_secret: SNYK_TOKEN
    commands:
      - cd ./frontend
      - snyk test --severity-threshold=high
  - name: backend snyk scan
    image: node:14-buster-slim
    environment:
      SNYK_TOKEN:
        from_secret: SNYK_TOKEN
    commands:
      - cd ./backend
      - snyk test --severity-threshold=high
  - name: slack after test
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        security scan #{{build.number}} succeeded!
        {{else}}
        security scan #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

---
kind: pipeline
type: docker
name: deploy

trigger:
  event:
    - push
  branch:
    - master

steps:
  - name: deploy prod
    image: docker/compose:1.25.5
    when:
      branch:
        - master
    environment:
      COMPOSE_PROJECT_NAME: speedtest
      MONGO_COLLECTION:
        from_secret: MONGO_COLLECTION
      MONGO_INITDB_DATABASE:
        from_secret: MONGO_INITDB_DATABASE
      MONGO_INITDB_ROOT_PASSWORD:
        from_secret: MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_ROOT_USERNAME:
        from_secret: MONGO_INITDB_ROOT_USERNAME
      MONGO_NON_ROOT_PASSWORD:
        from_secret: MONGO_NON_ROOT_PASSWORD
      MONGO_NON_ROOT_USERNAME:
        from_secret: MONGO_NON_ROOT_USERNAME
      SCRAPER_HC_UUID:
        from_secret: SCRAPER_HC_UUID
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /bin/sh /drone/src/.docker/scripts/deploy_prod.sh
  - name: slack after deploy
    image: plugins/slack
    failure: ignore
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        deploy #{{build.number}} succeeded!
        {{else}}
        deploy #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

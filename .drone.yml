---
kind: pipeline
type: docker
name: notification

trigger:
  event: [ push, pull_request ]

steps:
  - name: slack before
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL

---
kind: pipeline
type: docker
name: build and publish latest

platform:
  os: linux
  arch: amd64

trigger:
  event: [ push, pull_request ]
  branch:
    exclude: [ master ]

steps:
  - name: publish
    image: gordonpn/docker-buildx-drone
    environment:
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /drone/src/.docker/scripts/build.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: build and publish stable

platform:
  os: linux
  arch: amd64

trigger:
  event: [ push, pull_request ]
  branch: [ master ]

steps:
  - name: publish
    image: gordonpn/docker-buildx-drone
    environment:
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
      DOCKER_TAG: stable
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /drone/src/.docker/scripts/build.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: security

trigger:
  event: [ push, pull_request ]
  branch: [ develop ]

depends_on:
  - build and publish latest

steps:
  - name: bandit test for scraper
    image: python:3.8-buster
    failure: ignore
    commands:
      - cd ./scraper
      - pip install bandit
      - bandit -r ./
  - name: safety check for scraper
    image: python:3.8-buster
    failure: ignore
    commands:
      - cd ./scraper
      - pip install safety
      - safety check
      - safety check -r requirements.txt
  - name: trivy scan
    image: docker
    failure: ignore
    environment:
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    commands:
      - docker run aquasec/trivy --ignore-unfixed --no-progress --exit-code 1 --severity CRITICAL repo https://github.com/gordonpn/internet-speedtests-visualized
      - docker run aquasec/trivy --ignore-unfixed --no-progress --exit-code 1 --severity CRITICAL gordonpn/speedtest-scraper
      - docker run aquasec/trivy --ignore-unfixed --no-progress --exit-code 1 --severity CRITICAL gordonpn/speedtest-backend
      - docker run aquasec/trivy --ignore-unfixed --no-progress --exit-code 1 --severity CRITICAL gordonpn/speedtest-frontend
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
  - name: snyk scan
    image: gordonpn/snyk-cli-drone
    failure: ignore
    environment:
      SNYK_TOKEN:
        from_secret: SNYK_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - snyk test --severity-threshold=high https://github.com/gordonpn/internet-speedtests-visualized
      - snyk test --docker gordonpn/speedtest-frontend:latest --file=Dockerfile --exclude-base-image-vulns
      - snyk test --docker gordonpn/speedtest-backend:latest --file=Dockerfile --exclude-base-image-vulns
      - snyk test --docker gordonpn/speedtest-scraper:latest --file=Dockerfile --exclude-base-image-vulns

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: deploy

trigger:
  event: [push]
  branch: [master]

depends_on:
  - build and publish stable

steps:
  - name: deploy prod
    image: docker/compose:1.25.5
    environment:
      MONGO_COLLECTION:
        from_secret: MONGO_COLLECTION
      MONGO_INITDB_DATABASE:
        from_secret: MONGO_INITDB_DATABASE
      MONGO_INITDB_ROOT_PASSWORD:
        from_secret: MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_ROOT_USERNAME:
        from_secret: MONGO_INITDB_ROOT_USERNAME
      MONGO_NON_ROOT_PASSWORD:
        from_secret: MONGO_NON_ROOT_PASSWORD
      MONGO_NON_ROOT_USERNAME:
        from_secret: MONGO_NON_ROOT_USERNAME
      SCRAPER_HC_UUID:
        from_secret: SCRAPER_HC_UUID
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - /drone/src/.docker/scripts/deploy.sh

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
